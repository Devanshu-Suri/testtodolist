{"version":3,"sources":["Components/todolist.js","Components/login.js","App.js","registerServiceWorker.js","index.js"],"names":["Todolist","uniqueId","Math","random","toString","substr","modalTaskForm","modal","setState","modalTaskForm_Toggle","submitTask","e","preventDefault","state","tasks","tittle","detail","time","act","index","task","id","push","fav","inputChange","target","name","value","fRemove","i","splice","fEdit","viewDateTime","dt","split","n","Date","toLocaleDateString","weekday","year","month","day","taskDone","doneTasks","removeDone","unDone","renderTasks","navActive","window","location","reload","this","className","style","paddingTop","position","onClick","length","class","type","logout","bind","map","data","key","ref","color","onChange","placeholder","aria-label","Component","Login","props","initErrorState","usernameError","pwdError","defaultErrorValues","userName","pwd","errors","isUserLoggedIn","userNotExist","refs","username","console","log","isUserValid","isValidString","password","users","JSON","parse","localStorage","getItem","isUserExist","findIndex","user","alert","str","trim","classs","login","React","App","clearUsers","loadUsers","clear","setItem","stringify","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ad24a73e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './todolist.css';\r\nimport 'bulma/css/bulma.css'\r\n\r\nexport class Todolist extends Component {\r\nconstructor(){\r\nsuper();\r\nthis.state={\r\ntasks: [],\r\ndoneTasks: [],\r\nmodalTaskForm: false,\r\nmodalTaskForm_Toggle: '',\r\n\r\ntittle: '',\r\ndetail: '',\r\ntime: '',\r\nfav: false,\r\n\r\nact: 0,\r\nindex: 0,\r\nrenderTasks: 1,\r\nnavActive: 'tasks'\r\n}\r\n}\r\n\r\n// make uniq id for every task\r\nuniqueId=()=>{\r\nreturn 'id-' + Math.random().toString(36).substr(2, 16);\r\n};\r\n\r\n//   TASKS\r\nmodalTaskForm=(modal)=>{\r\nif(modal){\r\nthis.setState({modalTaskForm_Toggle: 'is-active', modalTaskForm: modal});\r\n}else{\r\nthis.setState({modalTaskForm_Toggle: '', modalTaskForm: modal});\r\n}\r\n}\r\n\r\nsubmitTask=(e)=>{\r\ne.preventDefault();//for stop the reload when we submit the form\r\n// console.log('submit');\r\nlet {tasks, tittle, detail, time, act, index} = this.state;\r\n\r\nif(act === 0){              //NEW Data\r\nlet task = {\r\ntittle, detail, time, id: this.uniqueId()\r\n};\r\ntasks.push(task);\r\n}else{                      //UPDATE the data at equal index\r\ntasks[index].tittle = tittle;\r\ntasks[index].detail = detail;\r\ntasks[index].time = time;\r\n} \r\n\r\nthis.setState({\r\ntasks,\r\nmodalTaskForm_Toggle: '', \r\nmodalTaskForm: false,\r\n// reset the value of form\r\ntittle: '',\r\ndetail: '',\r\ntime: '',\r\nfav: false,\r\nact: 0\r\n});\r\n\r\n}\r\n\r\ninputChange=(e)=>{\r\nlet {name, value} = e.target;\r\nthis.setState({\r\n[name]: value\r\n});\r\n}\r\n\r\nfRemove = (i) => {\r\nlet { tasks } = this.state;\r\ntasks.splice(i,1);\r\nthis.setState({\r\ntasks,\r\n// reset\r\ntittle: '',\r\ndetail: '',\r\ntime: '',\r\nfav: false\r\n});\r\n\r\n}\r\n\r\nfEdit = (i) => {\r\nlet task = this.state.tasks[i];\r\n\r\nthis.setState({\r\ntittle: task.tittle,\r\ndetail: task.detail,\r\ntime: task.time,\r\n\r\nmodalTaskForm_Toggle: 'is-active', \r\nmodalTaskForm: true,\r\n\r\nact: 1,\r\nindex: i\r\n});\r\n\r\n}\r\n\r\n// setting for dateTime view \r\nviewDateTime=(dt)=>{\r\ndt = dt.split(\"T\");\r\n\r\nvar options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\nvar d = new Date(dt[0]);\r\nvar n = d.toLocaleDateString(['en-US'],options);\r\n\r\nreturn `${n} @${dt[1]}`\r\n}\r\n\r\n//   TASKS DONE\r\ntaskDone=(i)=>{\r\nlet {doneTasks,tasks} = this.state;\r\n// insert done task\r\ndoneTasks.push(tasks[i]);\r\n// delete task from tasks\r\ntasks.splice(i,1);\r\n\r\nthis.setState({\r\ndoneTasks,\r\ntasks\r\n});\r\n}\r\n\r\nremoveDone=(i)=>{\r\nlet {doneTasks} = this.state;\r\n// delete doneTasks\r\ndoneTasks.splice(i,1);\r\nthis.setState({\r\ndoneTasks,\r\n});\r\n}\r\n\r\nunDone=(i)=>{\r\nlet {doneTasks, tasks} = this.state;\r\n// insert in tasks\r\ntasks.push(doneTasks[i]);\r\n\r\n// remove in doneTasks\r\nthis.removeDone(i);\r\n}\r\n\r\n\r\nlogout(){\r\n    window.location.reload();\r\n}\r\n\r\n//..........................................................render().....................................................//\r\nrender() {\r\nlet {\r\nmodalTaskForm, modalTaskForm_Toggle, tasks,\r\ntittle, detail, time,\r\ndoneTasks, renderTasks, navActive\r\n} = this.state;\r\n\r\nreturn (\r\n//   hold the app  \r\n<div className=\"App\" style={{paddingTop:20}}>     \r\n{/* container */}\r\n<div className=\"container\">\r\n{/* Top Button */}\r\n<div className=\"columns\" style={{position:'fixed'}}>\r\n<div className=\"column is-12\">\r\n\r\n<div className=\"field has-addons\">\r\n<p className=\"control\">\r\n<a className=\"button is-link is-rounded\"\r\nonClick={()=>this.modalTaskForm(!modalTaskForm)}\r\n>\r\n<span className=\"icon\">\r\n<i className=\"fa fa-plus\" />\r\n</span>\r\n<span>New</span>\r\n</a>\r\n</p>\r\n<p className=\"control\">\r\n<a className={`button is-link ${navActive==='tasks'?'is-outlined':''}`}\r\nonClick={()=>{\r\nthis.setState({\r\nrenderTasks:1,\r\nnavActive: 'tasks'\r\n});\r\n}}\r\n>\r\n<span className=\"icon\">\r\n<i className=\"fa fa-tasks\" />\r\n</span>\r\n<span>Tasks ( {tasks.length} )</span>\r\n</a>\r\n</p>\r\n<p className=\"control\">\r\n<a className={`button is-link ${navActive==='done'?'is-outlined':''}`}\r\nonClick={()=>{\r\nthis.setState({\r\nrenderTasks: 2,\r\nnavActive: 'done'\r\n});\r\n}}\r\n>\r\n<span className=\"icon\">\r\n<i className=\"fa fa-check\" />\r\n</span>\r\n<span>Done ( {doneTasks.length} )</span>\r\n</a>\r\n</p>\r\n</div>\r\n\r\n</div>\r\n</div>\r\n<div class=\"field \" >\r\n              <p class=\"control\">\r\n                <button\r\n                  class=\"button is-warning hey\"\r\n                  type=\"button\"\r\n                  onClick={this.logout.bind(this)}\r\n                >\r\n                  Logout \r\n                </button>\r\n                </p>\r\n                </div>\r\n\r\n{/* TODO LIST */}\r\n<div style={{paddingTop:60}}>\r\n\r\n{   renderTasks===1 &&\r\ntasks.map((data, i) =>\r\n<div className=\"columns\" key={i}>\r\n<div className=\"column is-12\">\r\n<article className=\"media\">\r\n<div className=\"media-content\">\r\n<div className=\"content\">\r\n<p>\r\n<strong>{data.tittle}</strong>\r\n<br/>\r\n<small>{this.viewDateTime(data.time)}</small>\r\n<br/>\r\n{data.detail}\r\n</p>\r\n</div>\r\n<nav className=\"level is-mobile\">\r\n<div className=\"level-left\">\r\n<a className=\"level-item\"\r\nonClick={()=>this.taskDone(i)}\r\n>\r\n<span className=\"icon\"><i className=\"fa fa-lg fa-check\"></i></span>\r\n</a>\r\n\r\n<a className=\"level-item\"\r\nonClick={()=>this.fEdit(i)}\r\n>\r\n<span className=\"icon\"><i className=\"fa fa-lg fa-pencil-alt\"></i></span>\r\n</a>\r\n</div>\r\n</nav>\r\n</div>\r\n<div className=\"media-right\">\r\n<button className=\"delete\"\r\nonClick={()=>this.fRemove(i)}\r\n></button>\r\n</div>\r\n</article>\r\n</div>\r\n</div>                        \r\n)\r\n}\r\n\r\n{   renderTasks===2 &&\r\ndoneTasks.map((data, i) =>\r\n<div className=\"columns\" key={i}>\r\n<div className=\"column is-12\">\r\n<article className=\"media\">\r\n<div className=\"media-content\">\r\n<div className=\"content\">\r\n<p>\r\n<strong>{data.tittle}</strong>\r\n<br/>\r\n<small>{this.viewDateTime(data.time)}</small>\r\n<br/>\r\n{data.detail}\r\n</p>\r\n</div>\r\n<nav className=\"level is-mobile\">\r\n<div className=\"level-left\">\r\n<a className=\"level-item\"\r\nonClick={()=>this.unDone(i)}\r\n>\r\n<span className=\"icon\"><i className=\"fa fa-lg fa-undo\"></i></span>\r\n</a>\r\n\r\n\r\n</div>\r\n</nav>\r\n</div>\r\n<div className=\"media-right\">\r\n<button className=\"delete\"\r\nonClick={()=>this.removeDone(i)}\r\n></button>\r\n</div>\r\n</article>\r\n</div>\r\n</div>                        \r\n)\r\n}\r\n\r\n</div>\r\n\r\n</div>\r\n\r\n{/* MODAL - TASK FORM (our inside the (+))*/}\r\n<div className={`modal ${modalTaskForm_Toggle}`}>{/*Trigger the modal for one and close */}\r\n<div className=\"modal-background\" onClick={()=>this.modalTaskForm(!modalTaskForm)}></div>\r\n<div className=\"modal-content\">\r\n    \r\n<form ref=\"myForm\" className=\"myForm\">\r\n<div className=\"field\">\r\n<div className=\"control\">\r\n<label className=\"label\" style={{color:'#fff'}}>Tittle</label>\r\n<input className=\"input is-info\" type=\"text\" name='tittle' value={tittle} \r\nonChange={(e)=>this.inputChange(e)}/>\r\n</div>\r\n</div>\r\n<div className=\"field\">\r\n<div className=\"control\">\r\n<label className=\"label\" style={{color:'#fff'}}>Detail</label>\r\n<textarea className=\"textarea is-info\" type=\"text\" placeholder=\"Info textarea\"\r\nname='detail'\r\nvalue={detail}\r\nonChange={(e)=>this.inputChange(e)}\r\n></textarea>\r\n</div>\r\n</div>\r\n<div className=\"field\">\r\n<div className=\"control\">\r\n<label className=\"label\" style={{color:'#fff'}}>Time</label>\r\n<input className=\"input is-info\" type=\"datetime-local\" name='time' value={time} \r\nonChange={(e)=>this.inputChange(e)}/>\r\n</div>\r\n</div>\r\n<button className=\"button is-info\"\r\nonClick={(e)=>this.submitTask(e)}\r\n>Save</button>\r\n</form>\r\n\r\n</div>\r\n<button className=\"modal-close is-large\" aria-label=\"close\"\r\nonClick={()=>this.modalTaskForm(!modalTaskForm)}\r\n></button>\r\n\r\n</div>\r\n\r\n</div>\r\n\r\n);\r\n}\r\n}\r\nexport default Todolist","import React from \"react\";\r\nimport \"bulma/css/bulma.css\";\r\nimport { Todolist } from \"./todolist\";\r\nimport \"./login.css\";\r\nexport class Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.initErrorState = { usernameError: \"\", pwdError: \"\" };\r\n    this.defaultErrorValues = {\r\n      usernameError: \"\",\r\n      pwdError: \"\"\r\n    };\r\n    this.state = {\r\n      userName: \"\",\r\n      pwd: \"\",\r\n      errors: this.defaultErrorValues,\r\n      isUserLoggedIn: false,\r\n      userNotExist: false\r\n    };\r\n  }\r\n  //   login() {\r\n\r\n  //     localStorage.setItem(\"username\", this.refs.username.value);\r\n  //     localStorage.setItem(\"password\", this.refs.pwd.value);\r\n\r\n  //     this.setState({ userName, pwd, errors: this.defaultErrorValues });\r\n  //   }\r\n\r\n  login() {\r\n    let userName = this.refs.username.value;\r\n    let pwd = this.refs.pwd.value;\r\n    console.log(\"UserName is \", userName);\r\n    console.log(\"Password \", pwd);\r\n    this.isUserValid(userName, pwd);\r\n    if (!this.isValidString(userName)) {\r\n      console.log(\"Error Userid .... \");\r\n      this.defaultErrorValues.usernameError = \"User Name is Empty\";\r\n    } else {\r\n      this.defaultErrorValues.usernameError = \"\";\r\n    }\r\n    if (!this.isValidString(pwd)) {\r\n      this.defaultErrorValues.pwdError = \"Password Name is Empty\";\r\n    } else {\r\n      this.defaultErrorValues.pwdError = \"\";\r\n    }\r\n    if (!this.isValidString(userName) && !this.isValidString(pwd)) {\r\n    }\r\n    this.defaultErrorValues = this.initErrorState;\r\n    console.log(\"Errors are \", this.defaultErrorValues);\r\n  }\r\n\r\n  isUserValid(userName, password) {\r\n    const users = JSON.parse(localStorage.getItem(\"users\"));\r\n\r\n    const isUserExist = users.findIndex(user => user.userName === userName);\r\n\r\n    console.log(users[isUserExist]);\r\n\r\n    if (isUserExist === -1) {\r\n      this.defaultErrorValues.userNotExist = alert(\r\n        \"User not registered with us..!\"\r\n      );\r\n      this.setState({ ...this.state, userNotExist: true });\r\n    } else if (isUserExist > -1 && users[isUserExist].password === password) {\r\n      this.defaultErrorValues.userNotExist = \"\";\r\n      this.setState({ ...this.state, isUserLoggedIn: true });\r\n    }\r\n  }\r\n\r\n  isValidString(str) {\r\n    if (!str && str.trim().length === 0) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isUserLoggedIn) {\r\n      return <Todolist />;\r\n    } else {\r\n      return (\r\n        <div classs=\"container is-fluid\">\r\n          <section class=\"hero is-primary\">\r\n            <div class=\"hero-body\">\r\n              <div class=\"has-text-centered\">\r\n                <div>\r\n                  <h1 class=\"title tag is-danger is-large\">Login Page</h1>\r\n                </div>\r\n                <br></br>\r\n\r\n                <div class=\"field\">\r\n                  <p class=\"control has-icons-left\">\r\n                    <input\r\n                      class=\"input is-success\"\r\n                      type=\"text\"\r\n                      ref=\"username\"\r\n                      placeholder=\"Username\"\r\n                    />\r\n                  </p>\r\n                </div>\r\n\r\n                <div className=\"error\">{this.state.errors.usernameError}</div>\r\n                <div class=\"field\">\r\n                  <p class=\"control has-icons-left\">\r\n                    <input\r\n                      class=\"input input is-success\"\r\n                      ref=\"pwd\"\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                    />\r\n                    <span class=\"icon is-small is-left\">\r\n                      <i class=\"fas fa-lock\"></i>\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n                <div className=\"error\">{this.state.errors.pwdError}</div>\r\n                <div>{this.defaultErrorValues.userNotExist}</div>\r\n\r\n                <div class=\"field\">\r\n                  <p class=\"control\">\r\n                    <button\r\n                      class=\"button is-warning\"\r\n                      type=\"button\"\r\n                      onClick={this.login.bind(this)}\r\n                    >\r\n                      Login\r\n                    </button>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default Login;\r\n","import React, { Component } from \"react\";\n\nimport Login from \"./Components/login\";\nimport \"./App.css\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.clearUsers();\n    this.loadUsers();\n  }\n\n  clearUsers() {\n    localStorage.clear();\n  }\n\n  loadUsers() {\n    const users = [\n      { userName: \"devu\", password: \"lll\" },\n      { userName: \"arbaz\", password: \"lll\" },\n      { userName: \"karan\", password: \"lll\" }\n    ];\n\n    localStorage.setItem(\"users\", JSON.stringify(users));\n  }\n\n  render() {\n    // return login component\n    return <Login />;\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nregisterServiceWorker();\n"],"sourceRoot":""}